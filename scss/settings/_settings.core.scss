////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//                               W A R N I N G                                //
//                                                                            //
//                  DO NOT MODIFY ANYTHING BEYOND THIS POINT                  //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

// Check that the chosen font rules are pixel numbers.
@each $_font-globals in $global-font-size $global-line-height {

  @if (type-of($_font-globals) == number) {

    @if (unit($_font-globals) != "px") {
      @error "#{$_font-globals} needs to be a pixel value.";
    }

  } @else {
    @error "#{$_font-globals} needs to be a number.";
  }

}

// Check that the chosen size factors are unitless numbers.
@each $_spacing-unit in $global-spacing-unit-factor-tiny $global-spacing-unit-factor-small $global-spacing-unit-factor-large $global-spacing-unit-factor-huge {

  @if (type-of($_spacing-unit) == number) {

    @if (unitless($_spacing-unit) == false) {
      @error "#{$_spacing-unit} needs to be unitless.";
    }

  } @else {
    @error "#{$_spacing-unit} needs to be a number.";
  }

}

// Private/framework-only reassignment. Do not alter anything below.
$global-spacing-unit-tiny: round($global-spacing-unit * $global-spacing-unit-factor-tiny);
$global-spacing-unit-small: round($global-spacing-unit * $global-spacing-unit-factor-small);
$global-spacing-unit-medium: round($global-spacing-unit * $global-spacing-unit-factor-medium);
$global-spacing-unit-large: round($global-spacing-unit * $global-spacing-unit-factor-large);
$global-spacing-unit-huge: round($global-spacing-unit * $global-spacing-unit-factor-huge);